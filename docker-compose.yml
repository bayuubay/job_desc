version: "3.3"

services:

  proxy:
    image: "traefik:v2.2"
    container_name: "proxy"
    restart: "unless-stopped"
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    expose:
      - "8080"
    ports:
      - "88:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: "postgres:13.0-alpine"
    container_name: "db"
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: "unless-stopped"
    env_file:
      - ".env"
    volumes:
      - ".postgres-data:/var/lib/postgresql/data"

  api:
    build: "."
    image: "myimage:${APP_VERSION}"
    container_name: "api"
    restart: "unless-stopped"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web" 
    expose:
      - "3000"
    env_file:
      - ".env"
    depends_on:
      - "db"
    volumes: 
      - "./src:/app/src"
    command: [
      "./wait-for",
      "db:5432",
      "--",
      "yarn",
      "run",
      "${NODE_ENV}"
    ]
